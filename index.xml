<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>东尼的博客</title>
    <link>https://andyfree96.github.io/</link>
    <description>安东尼的博客，分享生活中的一些有意思的事儿！</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>anthonyfree96@gmail.com (AndyFree96)</managingEditor>
      <webMaster>anthonyfree96@gmail.com (AndyFree96)</webMaster><lastBuildDate>Wed, 27 Nov 2024 10:29:07 &#43;0800</lastBuildDate>
      <atom:link href="https://andyfree96.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>CPython 源码剖析：Python 运行的奥秘</title>
  <link>https://andyfree96.github.io/cpython%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</link>
  <pubDate>Wed, 27 Nov 2024 10:29:07 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/cpython%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202411/4/annie-spratt-6TTV6JO2zy8-unsplash.jpg" alt="CPython 源码剖析：Python 运行的奥秘" title="CPython 源码剖析：Python 运行的奥秘" referrerpolicy="no-referrer"/></div><p>我们经常说，Python 是一门<strong>解释型语言</strong>，但你知道它的解释器 CPython 究竟是如何工作的么？Python 的内存管理、字节码执行、垃圾回收……这些<em>幕后英雄</em>是如何协作的？在这篇文章中，我们将通过剖析 CPython 源码，一起探索 Python 的运行本质。</p>]]></description>
</item>
<item>
  <title>csv2 源码剖析：轻量级 CSV 处理的高效之道</title>
  <link>https://andyfree96.github.io/csv2%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</link>
  <pubDate>Mon, 07 Oct 2024 14:16:41 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/csv2%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202410/16/samsung-memory-dIfsOkzzSk4-unsplash.jpg" alt="csv2 源码剖析：轻量级 CSV 处理的高效之道" title="csv2 源码剖析：轻量级 CSV 处理的高效之道" referrerpolicy="no-referrer"/></div><blockquote>
<p>纸上得来终觉浅，绝知此事要躬行。——陆游《冬夜读书示子聿》</p>
</blockquote>
<p><a href="https://github.com/p-ranav/csv2"target="_blank" rel="external nofollow noopener noreferrer">csv2</a>是一个轻量级 C++ 库，用于将 CSV 文件解析为 C++ 中的 STL 容器。该库的主要功能是高效地处理 CSV 数据，简化了处理 CSV 文件的代码编写过程。以下是它的主要特性：</p>
<ol>
<li>简单易用：通过使用 STL 容器（如 std::vector 和 std::tuple），使得开发者能够轻松将 CSV 文件的内容转换为标准 C++ 数据结构。</li>
<li>依赖少：该库只有 C++17 标准库的依赖，因此不需要额外的第三方库。</li>
<li>高效解析：该库采用高效的解析机制，支持处理大型 CSV 文件。</li>
<li>轻量级：代码库很小，适用于嵌入式或对依赖库要求较高的项目。</li>
</ol>]]></description>
</item>
<item>
  <title>R数据科学</title>
  <link>https://andyfree96.github.io/r%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/</link>
  <pubDate>Mon, 26 Aug 2024 16:47:01 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/r%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202411/1/fabrizio-coco-mlzgzXyBdeM-unsplash.jpg" alt="R数据科学" title="R数据科学" referrerpolicy="no-referrer"/></div><p>在当今数据驱动的世界中，从大规模数据分析到精准预测模型，数据科学正在塑造我们的决策方式。而在众多数据科学工具中，R 凭借其强大的统计分析能力和丰富的社区资源，成为数据科学家和分析师的首选之一。那么，如何利用 R 优雅地解锁数据的潜力？让我们从基础开始，逐步探索 R 的神奇之处。</p>]]></description>
</item>
<item>
  <title>TCP/IP网络编程</title>
  <link>https://andyfree96.github.io/tcp-ip%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
  <pubDate>Sun, 25 Feb 2024 20:41:07 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/tcp-ip%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202402/3/mos-design-VUmPf5jYPK0-unsplash.jpg" alt="TCP/IP网络编程" title="TCP/IP网络编程" referrerpolicy="no-referrer"/></div><ul>
<li><strong>2024/1/17 更新</strong>: 增加<strong>进程间通信</strong></li>
</ul>]]></description>
</item>
<item>
  <title>深入解析CSS</title>
  <link>https://andyfree96.github.io/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90css/</link>
  <pubDate>Fri, 25 Aug 2023 20:13:04 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90css/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202402/2/klara-kulikova-4YNmgh2PERc-unsplash.jpg" alt="深入解析CSS" title="深入解析CSS" referrerpolicy="no-referrer"/></div><!-- - **2022/11/10 更新**: 增加**背景、阴影和混合模式**
- **2022/11/14 更新**: 增加**选择器**和**预处理器** -->
<ul>
<li><strong>2023/11/23 更新</strong>: 增加 4 个练习<a href="#%e9%a1%b9%e7%9b%ae">项目</a>——Parallax scroll animation、Voyage Slider、App Menu With Lock Screen 和 Old Film Effect</li>
<li><strong>2023/12/13 更新</strong>: 增加练习<a href="#%e9%a1%b9%e7%9b%ae">项目</a>——Polaroid Camera</li>
<li><strong>2024/10/08 更新</strong>: <a href="#%e9%80%89%e6%8b%a9%e5%99%a8">选择器</a>增加来自<a href="https://x.com/Shefali__J"target="_blank" rel="external nofollow noopener noreferrer">@Shefali__J</a>的<a href="https://x.com/Shefali__J/status/1843151265100153248"target="_blank" rel="external nofollow noopener noreferrer">选择器速查表</a></li>
</ul>]]></description>
</item>
<item>
  <title>那些好用的JavaScript数组方法</title>
  <link>https://andyfree96.github.io/%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84javascript%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</link>
  <pubDate>Mon, 27 Feb 2023 13:37:24 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84javascript%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202402/4/neom-QZGW6t70IsI-unsplash.jpg" alt="那些好用的JavaScript数组方法" title="那些好用的JavaScript数组方法" referrerpolicy="no-referrer"/></div><p>在用 JavaScript 编程时，我们会经常用到数组对象，本文我们就来盘点一下那些好用的数组方法吧！😁</p>]]></description>
</item>
<item>
  <title>Axios教程</title>
  <link>https://andyfree96.github.io/axios%E6%95%99%E7%A8%8B/</link>
  <pubDate>Sat, 24 Dec 2022 14:56:12 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/axios%E6%95%99%E7%A8%8B/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202402/1/neom-85ey1vFIwkc-unsplash.jpg" alt="Axios教程" title="Axios教程" referrerpolicy="no-referrer"/></div><p><a href="https://github.com/axios/axios"target="_blank" rel="external nofollow noopener noreferrer">Axios</a>是一个基于 Promise 的 HTTP 客户端，我们可以在浏览器和 Node.js 中使用它。Axios 使向 REST 端点发送异步 HTTP 请求和执行 CRUD 操作变得更加容易。它可以在纯 JavaScript 中使用，也可以在 Vue 或者 React 之类的库中使用。</p>]]></description>
</item>
<item>
  <title>快乐的Linux命令行</title>
  <link>https://andyfree96.github.io/%E5%BF%AB%E4%B9%90%E7%9A%84linux%E5%91%BD%E4%BB%A4%E8%A1%8C/</link>
  <pubDate>Fri, 07 Oct 2022 17:01:53 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/%E5%BF%AB%E4%B9%90%E7%9A%84linux%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202410/9/fotis-fotopoulos-uunW8FbnT-0-unsplash.jpg" alt="快乐的Linux命令行" title="快乐的Linux命令行" referrerpolicy="no-referrer"/></div><ul>
<li><strong>2024/11/12 更新</strong>: <a href="#%e6%8e%a8%e8%8d%90">推荐</a>增加<strong>CLI tools you won&rsquo;t be able to live without 🔧<strong>和</strong>40 个超有趣的 Linux 命令行彩蛋和游戏</strong></li>
</ul>
<p>在现代操作系统中，图形用户界面 (GUI) 让我们与计算机的交互变得直观和简单。然而，对于许多开发者、系统管理员和技术爱好者而言，Linux 命令行仍然是最为强大且不可替代的工具。通过它，我们能够精准地控制系统资源、自动化复杂任务，并快速处理各种系统操作。与 GUI 不同，命令行的操作不依赖于鼠标或其他外部设备，只需键入一行命令，便可在数秒内完成从文件管理到网络配置、从进程控制到系统监控等一系列操作。正因为其高效、灵活和可扩展性，Linux 命令行成为了技术专家首选的工作方式之一。本文，我们将逐步探索 Linux 命令行的基础知识，了解一些常用的命令，以及如何利用这些命令高效管理系统。无论你是新手还是经验丰富的用户，掌握这些命令都会让你在 Linux 世界中如鱼得水。</p>]]></description>
</item>
<item>
  <title>BeautifulSoup库使用</title>
  <link>https://andyfree96.github.io/beautifulsoup%E5%BA%93%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Mon, 08 Nov 2021 08:36:00 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/beautifulsoup%E5%BA%93%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202110/2/luke-jones-JcEEIM963oM-unsplash.jpg" alt="BeautifulSoup库使用" title="BeautifulSoup库使用" referrerpolicy="no-referrer"/></div><p><code>BeautifulSoup</code>是啥？它是一个可以从 HTML 或 XML 文件中提取数据的 Python 库。它能通过我们喜欢的转换器实现文档导航，查找和修改。</p>]]></description>
</item>
<item>
  <title>Requests库使用</title>
  <link>https://andyfree96.github.io/requests%E5%BA%93%E4%BD%BF%E7%94%A8/</link>
  <pubDate>Fri, 08 Oct 2021 08:26:24 &#43;0800</pubDate>
  <author>AndyFree96</author>
  <guid>https://andyfree96.github.io/requests%E5%BA%93%E4%BD%BF%E7%94%A8/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="/images/202110/1/steve-johnson-UaP_MmMxiTs-unsplash.jpg" alt="Requests库使用" title="Requests库使用" referrerpolicy="no-referrer"/></div><ul>
<li><strong>2024/11/06 更新</strong>: 修改<strong>JSON 响应内容</strong>、<strong>定制请求头</strong>、<strong>POST 请求</strong>中的代码以及图片</li>
</ul>
<p>我们可以使用 Python 内置的 urllib 包来请求网络资源。它用起来比较麻烦，而且缺少很多实用的高级功能。本文我们将会介绍一个更加方便的 Python 第三方库——Requests 的使用。</p>]]></description>
</item>
</channel>
</rss>
